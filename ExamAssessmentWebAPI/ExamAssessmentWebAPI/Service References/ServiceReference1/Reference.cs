//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ExamAssessmentWebAPI.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SubTopic", Namespace="http://schemas.datacontract.org/2004/07/LMS1701.EA.SOAPAPI")]
    [System.SerializableAttribute()]
    public partial class SubTopic : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Subtopic_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Subtopic_NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Subtopic_ID {
            get {
                return this.Subtopic_IDField;
            }
            set {
                if ((this.Subtopic_IDField.Equals(value) != true)) {
                    this.Subtopic_IDField = value;
                    this.RaisePropertyChanged("Subtopic_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Subtopic_Name {
            get {
                return this.Subtopic_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.Subtopic_NameField, value) != true)) {
                    this.Subtopic_NameField = value;
                    this.RaisePropertyChanged("Subtopic_Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Answers", Namespace="http://schemas.datacontract.org/2004/07/LMS1701.EA.SOAPAPI")]
    [System.SerializableAttribute()]
    public partial class Answers : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddLanguageTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Answer1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PKIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExamAssessmentWebAPI.ServiceReference1.Correct correctField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AddLanguageTypeID {
            get {
                return this.AddLanguageTypeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.AddLanguageTypeIDField, value) != true)) {
                    this.AddLanguageTypeIDField = value;
                    this.RaisePropertyChanged("AddLanguageTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Answer1 {
            get {
                return this.Answer1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Answer1Field, value) != true)) {
                    this.Answer1Field = value;
                    this.RaisePropertyChanged("Answer1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PKID {
            get {
                return this.PKIDField;
            }
            set {
                if ((this.PKIDField.Equals(value) != true)) {
                    this.PKIDField = value;
                    this.RaisePropertyChanged("PKID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExamAssessmentWebAPI.ServiceReference1.Correct correct {
            get {
                return this.correctField;
            }
            set {
                if ((object.ReferenceEquals(this.correctField, value) != true)) {
                    this.correctField = value;
                    this.RaisePropertyChanged("correct");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Correct", Namespace="http://schemas.datacontract.org/2004/07/ExamassessmentWCF.DTO")]
    [System.SerializableAttribute()]
    public partial class Correct : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isCorrectField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isCorrect {
            get {
                return this.isCorrectField;
            }
            set {
                if ((this.isCorrectField.Equals(value) != true)) {
                    this.isCorrectField = value;
                    this.RaisePropertyChanged("isCorrect");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Subject", Namespace="http://schemas.datacontract.org/2004/07/LMS1701.EA.SOAPAPI")]
    [System.SerializableAttribute()]
    public partial class Subject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Subject_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Subject_NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExamAssessmentWebAPI.ServiceReference1.Category[] listCatField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Subject_ID {
            get {
                return this.Subject_IDField;
            }
            set {
                if ((this.Subject_IDField.Equals(value) != true)) {
                    this.Subject_IDField = value;
                    this.RaisePropertyChanged("Subject_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Subject_Name {
            get {
                return this.Subject_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.Subject_NameField, value) != true)) {
                    this.Subject_NameField = value;
                    this.RaisePropertyChanged("Subject_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExamAssessmentWebAPI.ServiceReference1.Category[] listCat {
            get {
                return this.listCatField;
            }
            set {
                if ((object.ReferenceEquals(this.listCatField, value) != true)) {
                    this.listCatField = value;
                    this.RaisePropertyChanged("listCat");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Category", Namespace="http://schemas.datacontract.org/2004/07/LMS1701.EA.SOAPAPI")]
    [System.SerializableAttribute()]
    public partial class Category : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Categories_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Categories_NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ExamAssessmentWebAPI.ServiceReference1.SubTopic[] subtopicsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Categories_ID {
            get {
                return this.Categories_IDField;
            }
            set {
                if ((this.Categories_IDField.Equals(value) != true)) {
                    this.Categories_IDField = value;
                    this.RaisePropertyChanged("Categories_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Categories_Name {
            get {
                return this.Categories_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.Categories_NameField, value) != true)) {
                    this.Categories_NameField = value;
                    this.RaisePropertyChanged("Categories_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ExamAssessmentWebAPI.ServiceReference1.SubTopic[] subtopics {
            get {
                return this.subtopicsField;
            }
            set {
                if ((object.ReferenceEquals(this.subtopicsField, value) != true)) {
                    this.subtopicsField = value;
                    this.RaisePropertyChanged("subtopics");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSubtopicList", ReplyAction="http://tempuri.org/IService1/GetSubtopicListResponse")]
        ExamAssessmentWebAPI.ServiceReference1.SubTopic[] GetSubtopicList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSubtopicList", ReplyAction="http://tempuri.org/IService1/GetSubtopicListResponse")]
        System.Threading.Tasks.Task<ExamAssessmentWebAPI.ServiceReference1.SubTopic[]> GetSubtopicListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAnswersQuestion", ReplyAction="http://tempuri.org/IService1/GetAnswersQuestionResponse")]
        ExamAssessmentWebAPI.ServiceReference1.Answers[] GetAnswersQuestion(int Questid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAnswersQuestion", ReplyAction="http://tempuri.org/IService1/GetAnswersQuestionResponse")]
        System.Threading.Tasks.Task<ExamAssessmentWebAPI.ServiceReference1.Answers[]> GetAnswersQuestionAsync(int Questid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllSubject", ReplyAction="http://tempuri.org/IService1/GetAllSubjectResponse")]
        ExamAssessmentWebAPI.ServiceReference1.Subject[] GetAllSubject();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllSubject", ReplyAction="http://tempuri.org/IService1/GetAllSubjectResponse")]
        System.Threading.Tasks.Task<ExamAssessmentWebAPI.ServiceReference1.Subject[]> GetAllSubjectAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : ExamAssessmentWebAPI.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<ExamAssessmentWebAPI.ServiceReference1.IService1>, ExamAssessmentWebAPI.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public ExamAssessmentWebAPI.ServiceReference1.SubTopic[] GetSubtopicList() {
            return base.Channel.GetSubtopicList();
        }
        
        public System.Threading.Tasks.Task<ExamAssessmentWebAPI.ServiceReference1.SubTopic[]> GetSubtopicListAsync() {
            return base.Channel.GetSubtopicListAsync();
        }
        
        public ExamAssessmentWebAPI.ServiceReference1.Answers[] GetAnswersQuestion(int Questid) {
            return base.Channel.GetAnswersQuestion(Questid);
        }
        
        public System.Threading.Tasks.Task<ExamAssessmentWebAPI.ServiceReference1.Answers[]> GetAnswersQuestionAsync(int Questid) {
            return base.Channel.GetAnswersQuestionAsync(Questid);
        }
        
        public ExamAssessmentWebAPI.ServiceReference1.Subject[] GetAllSubject() {
            return base.Channel.GetAllSubject();
        }
        
        public System.Threading.Tasks.Task<ExamAssessmentWebAPI.ServiceReference1.Subject[]> GetAllSubjectAsync() {
            return base.Channel.GetAllSubjectAsync();
        }
    }
}
